[[polyfills_chapter_1]]
== The Current State of Web Polyfills

=== Polyfilling: Past, Present and Future

If you play a game of word association with a room full of front-end developers, _polyfill_ will no-doubt receive mention from more than a few participants. This word, traditionally a synonym for _fallback_, _spackle_ or _patch_--unfamiliar to many developers until just a few years ago--has become a staple of conversations about modern and open web technologies. And while polyfilling has traditionally functioned as a practice for delivering modern features to non-modern browsers ("oldIE" is increasingly a synonym for this term), the concept has expanded over the last few years to include the addition of new and experimental platform features to *all browsers*, including the newest and most cutting-edge.

--- MOAR

When it comes to the act of patching browser capabilities via polyfills, developers fall into two camps: those *using* polyfills to provide modern web platform capabilities in their sites, and those building polyfills for the broader web community. The book is meant for the latter camp, and is intended to serve as an introduction to polyfilling, provide a set of principles and practical guidelines for building *reliable polyfills*, and finally, provide a roadmap for the future of polyfilling; that is, building polyfills that add developer-defined and cutting-edge features into the browser as a way to prove the value of new and unproven ideas.

At present, countless articles and book chapters exist which cover the subject of polyfilling. However, in nearly every case, these articles are targeted at polyfill consumers, and not the intrepid developers who build these libraries. One notable exception is http://addyosmani.com/blog/writing-polyfills[Addy Osmani's guide for Polyfill developers], an introductory read that I highly recommend. Beyond Addy's article, there are few resources, online or in print, which cover the topic of polyfills from the viewpoint of the polyfill developer. A lack of definitive resources for building these libraries means that we, as developers must strike out on our own, or slowly dig through other libraries for patterns and ideas.

My sincere hope is that this book will "close the gap" by serving as a *fieldbook* for polyfill developers. We'll start with a cursory introduction to polyfilling on the web platform, and I'll share some principles and guidelines for building polyfills that developers can rely on. Once the guidelines have been established, we'll shift the discussion to an in-depth walkthrough of building a real-life, reasonably complex polyfill, by example.

Once I’ve covered the ins-and outs of building polyfills, the last few chapters will shift the focus to an emerging trend on the web platform: the “experimental feature” polyfill, or *prollyfill*. This pattern, as seen in libraries like AngularJS and Google's http://polymer-project.org[Polymer Project], enables developers to test and work with emerging concepts, sometimes ahead of even the browser vendors themselves. By the time we're done, you'll have all the tools you need to build reliable polyfills for the present, and the future, of the web.

=== What is a Polyfill (and what is it not)?

=== Common Types of Polyfills

=== Challenges and Considerations for Building Polyfills

=== Why P®ollyfills still matter 